# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/filemanagement/app_file_service/backup.gni")

ohos_shared_library("backup_extension_ability_native") {
  branch_protector_ret = "pac_ret"

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  sources = [
    "src/ext_backup.cpp",
    "src/ext_backup_ani.cpp",
    "src/ext_backup_context.cpp",
    "src/ext_backup_context_js.cpp",
    "src/ext_backup_js.cpp",
    "src/ext_backup_loader.cpp",
    "src/ext_extension.cpp",
    "src/installd_un_tar_file.cpp",
    "src/sub_ext_extension.cpp",
    "src/tar_file.cpp",
    "src/untar_file.cpp",
  ]

  defines = [
    "LOG_DOMAIN=0xD004301",
    "LOG_TAG=\"BackupExt\"",
  ]

  include_dirs = [ "include" ]

  public_configs = [ "${path_backup}/services/backup_sa:public_idl_config" ]

  deps = [
    "${path_backup}/interfaces/inner_api/native/backup_kit_inner:backup_kit_inner",
    "${path_backup}/interfaces/innerkits/native:sandbox_helper_native",
    "${path_backup}/services/backup_sa:backup_sa_ipc_stub",
    "${path_backup}/utils:backup_utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_context_native",
    "ability_runtime:abilitykit_native",
    "ability_runtime:ani_common",
    "ability_runtime:app_context",
    "ability_runtime:appkit_native",
    "ability_runtime:extensionkit_native",
    "ability_runtime:napi_common",
    "ability_runtime:runtime",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "ipc:ipc_napi",
    "jsoncpp:jsoncpp",
    "napi:ace_napi",
    "runtime_core:ani",
    "samgr:samgr_proxy",
  ]

  if (brotli_enabled) {
    external_deps += ["brotli:brotli_shared"]
    defines += ["BROTLI_ENABLED"]
  }
  if (system_bit == 32) {
    defines += ["SYSTEM_BIT_32"];
  } else {
    defines += ["SYSTEM_BIT_64"];
  }

  cflags_cc = [
    "-fdata-sections",
    "-ffunction-sections",
    "-fno-unwind-tables",
    "-fno-asynchronous-unwind-tables",
    "-Os",
  ]

  use_exceptions = true
  relative_install_dir = "extensionability"
  part_name = "app_file_service"
  subsystem_name = "filemanagement"
}
