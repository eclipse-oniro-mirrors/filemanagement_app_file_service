# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//build/ohos/taihe_idl/taihe.gni")
import("//foundation/filemanagement/app_file_service/app_file_service.gni")

part_name = "app_file_service"
subsystem_name = "filemanagement"
taihe_generated_file_path = "$taihe_file_path/out/$subsystem_name/$part_name/fileuri"

copy_taihe_idl("copy_taihe") {
  sources = [ "${app_file_service_path}/interfaces/kits/taihe/fileuri/idl/ohos.file.fileuri.taihe" ]
}

ohos_taihe("run_taihe") {
  taihe_generated_file_path = "$taihe_generated_file_path"
  deps = [ ":copy_taihe" ]
  outputs = [
    "$taihe_generated_file_path/src/ohos.file.fileuri.ani.cpp",
    "$taihe_generated_file_path/src/ohos.file.fileuri.abi.c",
  ]
}

taihe_shared_library("file_fileuri_taihe") {
  taihe_generated_file_path = "$taihe_generated_file_path"
  subsystem_name = "$subsystem_name"
  part_name = "$part_name"

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  include_dirs = [
    "include",
    "${app_file_service_path}/interfaces/common/include",
    "${app_file_service_path}/interfaces/common/include/log.h",
    "${app_file_service_path}/interfaces/innerkits/native/file_uri/include",
    "${app_file_service_path}/interfaces/kits/ndk/fileshare/include"
  ]

  sources = get_target_outputs(":run_taihe")
  sources += [
    "src/ani_constructor.cpp",
    "src/fileuri_taihe.cpp"
  ]

  deps = [
    ":run_taihe",
    "${app_file_service_path}/interfaces/innerkits/native:fileuri_native",
  ]

  external_deps = [
    "hilog:libhilog",
    "ability_base:zuri",
  ]
}

generate_static_abc("file_fileuri_taihe_abc") {
  base_url = "$taihe_generated_file_path"
  files = [ "$taihe_generated_file_path/@ohos.file.fileuri.ets" ]
  is_boot_abc = "True"
  device_dst_file = "/system/framework/file_fileuri_taihe_abc.abc"
  dependencies = [ ":run_taihe" ]
}

ohos_prebuilt_etc("file_fileuri_etc") {
  source = "$target_out_dir/file_fileuri_taihe_abc.abc"
  module_install_dir = "framework"
  part_name = "app_file_service"
  subsystem_name = "filemanagement"
  deps = [
    ":file_fileuri_taihe_abc",
  ]
}

group("afs_fileuri_taihe") {
  deps = [
    ":file_fileuri_taihe",
    ":file_fileuri_etc",
  ]
}