# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/filemanagement/app_file_service/backup.gni")

ohos_unittest("b_session_test") {
  branch_protector_ret = "pac_ret"

  module_out_path = path_module_out_tests

  sources = [
    "${path_backup}/frameworks/native/backup_kit_inner/src/b_session_backup.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/b_session_restore.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/b_session_restore_async.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/service_incremental_reverse.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/service_reverse.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/service_reverse_stub.cpp",
    "b_session_backup_test.cpp",
    "b_session_restore_async_test.cpp",
    "b_session_restore_test.cpp",
  ]
  sources += backup_mock_proxy_src

  include_dirs = [
    "${path_backup}/interfaces/inner_api/native/backup_kit_inner/",
    "${path_backup}/interfaces/inner_api/native/backup_kit_inner/impl",
    "${path_backup}/frameworks/native/backup_kit_inner/include",
  ]
  include_dirs += backup_mock_utils_include

  deps = [
    "${path_backup}/tests/utils:backup_test_utils",
    "${path_backup}/utils:backup_utils",
  ]

  cflags = [ "--coverage" ]

  ldflags = [ "--coverage" ]

  cflags_cc = [ "--coverage" ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  defines = [
    "private=public",
    "protect=public",
  ]

  sanitize = {
    integer_overflow = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  use_exceptions = true
}

group("session_test") {
  testonly = true

  deps = [ ":b_session_test" ]
}
