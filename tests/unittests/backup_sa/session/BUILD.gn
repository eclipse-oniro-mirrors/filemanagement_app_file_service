# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/filemanagement/app_file_service/backup.gni")

ohos_unittest("b_incremental_session_test") {
  module_out_path = path_module_out_tests

  include_dirs = [
    "${path_backup}/frameworks/native/backup_kit_inner/include",
    "${path_backup}/interfaces/inner_api/native/backup_kit_inner/impl",
  ]

  sources = [
    "${path_backup}/frameworks/native/backup_kit_inner/src/b_file_info.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/b_incremental_backup_session.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/b_incremental_data.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/b_incremental_restore_session.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/b_incremental_session_restore_async.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/service_incremental_reverse.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/service_reverse.cpp",
    "${path_backup}/frameworks/native/backup_kit_inner/src/service_reverse_stub.cpp",
    "b_incremental_session_test.cpp",
    "service_proxy_mock.cpp",
  ]

  deps = [
    "${path_backup}/utils:backup_utils",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  defines = [
    "LOG_TAG=\"app_file_service\"",
    "LOG_DOMAIN=0xD200000",
    "private = public",
    "protected = public",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  use_exceptions = true
}

group("session_test") {
  testonly = true
  deps = [ ":b_incremental_session_test" ]
}
